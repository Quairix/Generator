name: Build and Release

on:
  push:
    branches: [ "ScriptJson" ]   # Укажите нужные ветки
    tags:
      - 'v*.*.*'                 # Для запуска при создании тегов
  pull_request:
    branches: [ "ScriptJson" ]

env:
  Solution_Name: Generator.sln

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        configuration: [Release]
        include:
          - os: windows-latest
            runtime: win-x64
            configuration: Release
          - os: ubuntu-latest
            runtime: linux-x64
            configuration: Release

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Check .NET SDK Version
        run: dotnet --version

      - name: Clean
        run: dotnet clean ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }}

      - name: Restore dependencies
        run: dotnet restore ${{ env.Solution_Name }} --runtime ${{ matrix.runtime }}

      - name: Build
        run: dotnet build ${{ env.Solution_Name }} --configuration ${{ matrix.configuration }} --no-restore

      - name: Publish
        run: dotnet publish ./Generator/Generator.csproj --configuration ${{ matrix.configuration }} --runtime ${{ matrix.runtime }} --output ./publish /p:PublishSingleFile=false

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Generator-${{ matrix.runtime }}
          path: ./publish

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Windows build artifacts
        uses: actions/download-artifact@v3
        with:
          name: Generator-win-x64
          path: ./artifacts/win-x64

      - name: Download Linux build artifacts
        uses: actions/download-artifact@v3
        with:
          name: Generator-linux-x64
          path: ./artifacts/linux-x64

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: |
            ./artifacts/win-x64/*
            ./artifacts/linux-x64/*
          tag: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: "Автоматически сгенерированный релиз для версии ${{ github.ref_name }}."
          token: ${{ github.token }}
